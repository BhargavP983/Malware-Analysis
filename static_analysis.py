import magic
import hashlib
from pefile import PE
import string
import json


def static_analysis(filepath):
    result = {}

    with open(filepath, 'rb') as f:
        file_data = f.read()
        filesize = len(file_data)
        filehash = hashlib.sha256(file_data).hexdigest()

        # Determining file type
        ftype = magic.from_file(filepath, mime=True)
        result["file type"] = ftype

        # calculate File size
        result["filesize"] = filesize

        # File Hash
        sha256_hash = hashlib.sha256()
        sha256_hash.update(file_data)
        result["sha256"] = sha256_hash.hexdigest()

    if ftype.startswith("application/x-dosexec") or ftype.startswith("application/x-ms-dos-executable"):
        try:
            with open(filepath, 'rb') as f:
                pe = PE(data=file_data)
                result["machine"] = hex(pe.FILE_HEADER.Machine)
                result["magic"] = hex(pe.OPTIONAL_HEADER.Magic)

                # extra features extracted
                result["number_of_sections"] = pe.FILE_HEADER.NumberOfSections
                result["entry_point"] = pe.OPTIONAL_HEADER.AddressOfEntryPoint

        except Exception as e:
            print(f"Error analyzing PE headers of dos-exe: {e}")

    elif ftype.startswith("application/x-executable"):

        exported_functions = []
        for exp in pe.DIRECTORY_ENTRY_EXPORT.symbols:
            exported_functions.append(exp.name)
        result["exported_functions"] = exported_functions

    return result


# Input file
filepath = "Executables/python310.exe"

# Perform static analysis
results = static_analysis(filepath)
for key, value in results.items():
    print(f"{key}: {value}")
